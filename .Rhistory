# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(knitr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(memisc)
library(GGally)
# Load the Data
setwd("/Users/kb/Documents/MOOCs/datascience/EDA/Project3_BurnhamK")
loandata <- read.csv("prosperLoanData.csv")
#keep only the variables we are interested in
ld <-loandata[,c("Term", "LoanStatus", "ListingCreationDate", "BorrowerRate",
"ProsperRating..numeric.","ListingCategory..numeric.",
"BorrowerState", "Occupation", "EmploymentStatus",
"EmploymentStatusDuration", "BorrowerState", "Occupation",
"EmploymentStatus", "EmploymentStatusDuration",
"IsBorrowerHomeowner", "DateCreditPulled",
"CreditScoreRangeLower", "FirstRecordedCreditLine",
"CurrentCreditLines", "OpenCreditLines",
"OpenRevolvingAccounts", "OpenRevolvingMonthlyPayment",
"InquiriesLast6Months", "TotalInquiries",
"RevolvingCreditBalance", "BankcardUtilization",
"CurrentDelinquencies", "AmountDelinquent",
"DelinquenciesLast7Years", "PublicRecordsLast10Years",
"PublicRecordsLast12Months",
"DebtToIncomeRatio","IncomeRange",
"IncomeVerifiable", "LoanOriginalAmount",
"LoanOriginationDate", "LoanOriginationQuarter",
"ListingCreationDate")]
#change some column names
#note - the relationship between CreditScoreLower and CreditScoreUpper is perfectly linear
ld <- plyr::rename(ld, c("ProsperRating..numeric." = "ProsperRating",
"ListingCategory..numeric." = "ListingCategory",
"CreditScoreRangeLower" = "CreditScore"))
#convert variables to appropriate data types
ld$Term <- as.ordered(ld$Term)
ld$ListingCategory <- factor(ld$ListingCategory)
#dates
ld$ListingCreationData <- base::as.Date(ld$ListingCreationDate, "%Y-%m-%d")
ld$LoanOriginationDate <- base::as.Date(ld$LoanOriginationDate, "%Y-%m-%d")
ld$FirstRecordedCreditLine <- base::as.Date(ld$FirstRecordedCreditLine,
"%Y-%m-%d")
ld$ListingCreationDate <- base::as.Date(ld$ListingCreationDate, "%Y-%m-%d")
ld$LoanMonth <- factor(format(ld$LoanOriginationDate, format = "%Y-%m"))
#combine IncomeRange $0 and "Not employed", convert "Not Displayed" to NA
ld$IncomeRange[ld$IncomeRange == "Not employed"] <- "$0"
ld$IncomeRange[ld$IncomeRange == "Not displayed"] <- NA
ld$IncomeRange <- factor(ld$IncomeRange, levels = c(NA, "$0", "$1-24,999",
"$25,000-49,999",
"$50,000-74,999",
"$75,000-99,999",
"$100,000+"))
#make ProsperRating an ordered factor
ld$ProsperRating <- ordered(ld$ProsperRating)
#a variable to indicate what month the loan was issued in
ld$Month <- factor(months(ld$LoanOriginationDate))
ld$Month <- factor(ld$Month, levels = c("January", "February", "March",
"April", "May", "June", "July",
"August", "September", "October",
"November", "December"))
#add prevailing interest rates obtained from the FederalReserve
TBRate <- read.csv("Fed3monthTbillRate.csv")
TBRate$Date <- as.Date(TBRate$Date,"%Y-%m-%d")
TBRate$LoanMonth <- format(TBRate$Date, format = "%Y-%m")
#merge the two data sets based on LoanMonth
ld <- merge(ld, TBRate)
#need to divide by 100 to match BorrowerRate
ld$TB3MS <- ld$TB3MS / 100
#so now I need to create a column in ld that uses the month from
#ld$LoanOrigination, compares it to the month for TBRate$Data and then puts
#the TBRate$TB3MS in it's place
CCRate <-read.csv("cc_rates.csv", header=FALSE)
names(CCRate) <- c("Date", "CCRate")
CCRate$CCRate <- CCRate$CCRate / 100
CCRate$Date <- as.Date(CCRate$Date, "%m/%d/%y")
CCRate$LoanMonth <- format(CCRate$Date, format = "%Y-%m")
ld <- merge(ld, CCRate)
ld$NewRegime <- !is.na(ld$ProsperRating)
print("Summary of Borrower Rate")
summary(ld$BorrowerRate)
ggplot(aes(x = BorrowerRate), data = ld) +
geom_histogram(binwidth = .005) +
coord_cartesian(xlim = c(.05, .35)) +
ggtitle("Histogram of Interest Rates")
p1 <- ggplot(aes(x = sqrt(BorrowerRate)), data = ld) +
geom_histogram(binwidth = .01) +
ggtitle("Histogram of sqrt(Interest Rates)")
p2 <- ggplot(aes(x = sqrt(BorrowerRate)), data = subset(ld, NewRegime == T)) +
geom_histogram(binwidth = .01) +
ggtitle("Loans since July 20 2009")
grid.arrange(p1, p2, ncol = 2)
pre2011 <- subset(ld, LoanOriginationDate <= as.Date("2011/01/01")
& NewRegime == TRUE)
ggplot(aes(x = BorrowerRate), data = pre2011) +
coord_cartesian(xlim = c(.345, .355)) +
geom_histogram(binwidth = .0001)
#what's the exact rate where we find the spike?
w <- seq(.3495,.3502, by = .0001)
for (i in w)
{
print(i)
print(length(pre2011$BorrowerRate[pre2011$BorrowerRate == i]))
}
ldHighRates <- subset(ld, BorrowerRate == .3177 | BorrowerRate == .3199 |
BorrowerRate == .35 | BorrowerRate == .3134)
ldHighRates$BorrowerRate <- factor(ldHighRates$BorrowerRate)
ggplot(aes(x = LoanOriginationDate, fill = BorrowerRate), data = ldHighRates) +
coord_cartesian(xlim = c(as.Date("2009/07/20"), as.Date("2014/03/01"))) +
geom_histogram(color = "black", binwidth = 50)
#create the isCeiling variable to indicate the loan was
#made at the prevailing rate ceiling
ld$IsCeiling <-
(ld$BorrowerRate == .35 & ld$LoanOriginationDate < as.Date("2011/01/01") &
ld$LoanOriginationDate > as.Date("2009/07/20")) |
(ld$BorrowerRate == .3199 & ld$LoanOriginationDate < as.Date("2012/01/01") &
ld$LoanOriginationDate >= as.Date("2011/01/01")) |
(ld$BorrowerRate == .3177 & ld$LoanOriginationDate < as.Date("2013/01/01") &
ld$LoanOriginationDate >= as.Date("2012/01/01")) |
(ld$BorrowerRate == .3134 & ld$LoanOriginationDate >= as.Date("2013/01/01"))
#create subset of the dataframe for loans that are TRUE for NewRegime
ldNew <- subset(ld, NewRegime == TRUE)
ggplot(aes(x = sqrt(EmploymentStatusDuration)), data = ldNew) +
geom_histogram()
ggplot(aes(x = EmploymentStatusDuration, y = CreditScore), data = ldNew) +
geom_point(alpha = .2, position = "jitter")
cor(sqrt(ldNew$EmploymentStatusDuration[!is.na(ldNew$EmploymentStatusDuration)]), ldNew$CreditScore[!is.na(ldNew$EmploymentStatusDuration)])
ggplot(aes(x = EmploymentStatusDuration, y = CreditScore), data = ldNew) +
geom_point(alpha = .1, position = "jitter")
ggplot(aes(x = EmploymentStatusDuration, y = CreditScore), data = sample_n(ldNew, 10000) +
geom_point(alpha = .1, position = "jitter")
ggplot(aes(x = EmploymentStatusDuration, y = CreditScore), data = sample_n(ldNew, 10000)) +
geom_point(alpha = .1, position = "jitter")
ggplot(aes(x = log(RevolvingCreditBalance)), data = ldNew) +
geom_histogram(binwidth = .1)
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = ldNew) +
geom_point()
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = ldNew) +
geom_point(alpha = .1)
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = ldNew) +
geom_point(alpha = .1, position = "jitter")
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 10000) +
geom_point(alpha = .1, position = "jitter")
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 10000)) +
geom_point(alpha = .1, position = "jitter")
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 10000)) +
geom_point(alpha = .1, position = "jitter") +
xlim(c(0,50000))
cor(ldNew$CreditScore, ldNew$RevolvingCreditBalance)
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = ldNew) +
geom_point(alpha = .1, position = "jitter") +
xlim(c(0,50000))
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 10000) +
geom_point(alpha = .1, position = "jitter") +
xlim(c(0,50000))
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 10000) +
geom_point(alpha = .05, position = "jitter") +
xlim(c(0,50000))
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 10000)) +
geom_point(alpha = .1, position = "jitter") +
xlim(c(0,50000))
ggplot(aes(x = RevolvingCreditBalance, y = CreditScore), data = sample_n(ldNew, 20000)) +
geom_point(alpha = .1, position = "jitter") +
xlim(c(0,50000))
ggplot(aes(x = BankcardUtilization), data = ldNew) +
geom_histogram(binwidth = .01) +
xlim(c(0,1.3))
cor(ldNew$BankcardUtilization, ldNew$CreditScore)
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = ldNew) +
geom_point()
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = ldNew) +
geom_point(position = "jitter", alpha = .1)
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = ldNew) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0.1.5))
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = ldNew) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0,1.5))
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = sample_n(ldNew, 10000) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0,1.5))
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = sample_n(ldNew, 10000)) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0,1.5))
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = sample_n(ldNew, 20000)) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0,1.5))
ggplot(aes(x = BankcardUtilization, y = CreditScore), data = sample_n(ldNew, 20000)) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0,1.5)) +
stat_smooth(method = "lm")
ggplot(aes(x = IncomeRange, y = BorrowerRate, fill = IsBorrowerHomeowner),
data = ldNew) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_boxplot()
ggplot(aes(x = CreditScore, y = BorrowerRate), data = ldNew) +
geom_point()
ggplot(aes(x = CreditScore, y = BorrowerRate), data = ldNew) +
geom_point(position = "jitter", alpha = .2)
ggplot(aes(x = CreditScore, y = BorrowerRate), data = sample_n(ldNew, 10000) +
geom_point(position = "jitter", alpha = .2)
ggplot(aes(x = CreditScore, y = BorrowerRate), data = sample_n(ldNew, 10000)) +
geom_point(position = "jitter", alpha = .2)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = ldNew) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 5000) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 5000)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 2000)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 100)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = ldNew) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = sample_n(ldNew, 10000)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 10000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 10000)) +
geom_point(alpha = .1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 20000)) +
geom_point(alpha = .1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 20000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = BankcardUtilization), data = sample_n(ldNew, 10000)) +
geom_point(position = "jitter", alpha = .2)
ggplot(aes(x = BankcardUtilization, y = BorrowerRate), data = sample_n(ldNew, 10000)) +
geom_point(position = "jitter", alpha = .2)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 20000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900)) +
stat_smooth(method = "lm")
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IncomeRange),
data = sample_n(ldNew, 20000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = BankcardUtilization, y = BorrowerRate), data = sample_n(ldNew, 10000)) +
geom_point(position = "jitter", alpha = .2) +
stat_smooth(method = "lm")
