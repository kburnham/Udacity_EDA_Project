ggplot(aes(x = LoanOriginalAmount, y = BorrowerRate, color = IncomeVerifiable), data = sample_n(ldNew, 500)) +
geom_point(position = "jitter") +
xlim(c(0,.5)) +
stat_smooth(method = "lm")
ggplot(aes(x = LoanOriginalAmount, y = BorrowerRate, color = IncomeVerifiable), data = sample_n(ldNew, 500)) +
geom_point(position = "jitter") +
#xlim(c(0,.5)) +
stat_smooth(method = "lm")
ggplot(aes(x = CreditScore, y = BorrowerRate), data = sample_n(ld, 5000)) +
geom_point()
ggplot(aes(x = CreditScore, y = BorrowerRate), data = sample_n(ld, 5000)) +
geom_point() +
xlim(500,800)
ggplot(aes(x = CreditScore, y = BorrowerRate), data = sample_n(ld, 5000)) +
geom_point(position = "jitter") +
xlim(500,800)
ggplot(aes(x = CreditScore, y = BorrowerRate), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(500,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(500,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = Income2), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = Income2, color = IsBorroweHomewoner), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = Income2, color = IsBorrowerHomewoner), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = Income2, color = IsBorrowerHomeowner), data = sample_n(ld, 1000)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = Income2, color = IsBorrowerHomeowner), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = .5, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = .8, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = LoanOriginalAmount), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, color = LoanOriginalAmount), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = BankCardUtilization), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = BankcardUtilization), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = CreditScore, y = BorrowerRate, size = BankcardUtilization), data = sample_n(ld, 500)) +
geom_point(position = "jitter") +
xlim(550,800)
ggplot(aes(x = IncomeRange, y = BorrowerRate, fill = IsBorrowerHomeowner),
data = ldNew) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_boxplot()
ggplot(aes(x = CreditScore, y = BorrowerRate, color = IsBorrowerHomeowner),
data = sample_n(ldNew, 1000)) +
geom_point(alpha = .8, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ld$Income2 <- factor(ntile(ld$IncomeRange, 3))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2),
data = sample_n(ldNew, 500)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 500)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 1000)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 1000)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 1000)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 500)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 500)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2),
data = sample_n(ldNew, 500)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2),
data = sample_n(ldNew, 500)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2),
data = sample_n(ldNew, 500)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
ggplot(aes(x = CreditScore, y = BorrowerRate, color = Income2),
data = sample_n(ldNew, 500)) +
geom_point(alpha = 1, position = "jitter") +
coord_cartesian(xlim = c(550, 900))
ggplot(aes(x = BankcardUtilization, y = BorrowerRate, color = Income2), data = sample_n(ldNew, 500)) +
geom_point(position = "jitter") +
xlim(c(0,1)) +
stat_smooth(method = "lm")
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30, color = "blue2", fill = "blue2") +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
angle = 90, vjust = -.4, size = 5, hjust = 1) +
theme_bw() + xlab("") + ylab("Monthly Loan Volume") +
scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30, color = "blue2", fill = "blue2") +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
angle = 90, vjust = -.4, size = 5, hjust = 1) +
theme_bw() + xlab("") + ylab("Monthly Loan Volume") +
scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30, color = "blue2", fill = "blue2") +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
theme_bw() + xlab("") + ylab("Monthly Loan Volume") +
scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30, color = "blue2", fill = "blue2") +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
xlab("") + ylab("Monthly Loan Volume") +
scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30, color = "blue2", fill = "blue2") +
#geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
#          color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
xlab("") + ylab("Monthly Loan Volume") +
scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
#geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
#          color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
xlab("") + ylab("Monthly Loan Volume") +
scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
#geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
#          color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
xlab("") + ylab("Monthly Loan Volume") +
#scale_y_continuous(breaks = c(5000)) +
theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
#geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
#          color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
xlab("") + ylab("Monthly Loan Volume") +
#scale_y_continuous(breaks = c(5000)) +
#theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
#geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
#          color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
xlab("") + ylab("Monthly Loan Volume")
#scale_y_continuous(breaks = c(5000)) +
#theme(axis.text.y = element_text(angle = 90))
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
#geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
#          color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01")))
#geom_text(data = d, mapping = aes(x= date, y = 5500, label = event),
#angle = 90, vjust = -.4, size = 5, hjust = 1) +
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01")))
ggplot(aes(x = LoanMonth, y = Loan * 100, color = Type), data = Rates) +
geom_line() +
scale_colour_manual(values=c("blue2", "brown1"),
labels = c("Prosper", "Credit Cards")) +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
ggplot(aes(x = LoanMonth, y = Loan * 100, color = Type), data = Rates) +
geom_line() +
scale_colour_manual(values=c("blue2", "brown1"),
labels = c("Prosper", "Credit Cards")) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
ggplot(aes(x = LoanMonth, y = Loan * 100, color = Type), data = Rates) +
geom_line() +
scale_colour_manual(values=c("blue2", "brown1"),
labels = c("Prosper", "Credit Cards")) +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=TRUE for all code chunks in your file.
library(knitr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(memisc)
library(GGally)
# Load the Data
setwd("/Users/kb/Documents/MOOCs/datascience/EDA/Project3_BurnhamK")
loandata <- read.csv("prosperLoanData.csv")
#keep only the variables we are interested in
ld <-loandata[,c("Term", "LoanStatus", "ListingCreationDate", "BorrowerRate",
"ProsperRating..numeric.","ListingCategory..numeric.",
"BorrowerState", "Occupation", "EmploymentStatus",
"EmploymentStatusDuration", "BorrowerState", "Occupation",
"EmploymentStatus", "EmploymentStatusDuration",
"IsBorrowerHomeowner", "DateCreditPulled",
"CreditScoreRangeLower", "FirstRecordedCreditLine",
"CurrentCreditLines", "OpenCreditLines",
"OpenRevolvingAccounts", "OpenRevolvingMonthlyPayment",
"InquiriesLast6Months", "TotalInquiries",
"RevolvingCreditBalance", "BankcardUtilization",
"CurrentDelinquencies", "AmountDelinquent",
"DelinquenciesLast7Years", "PublicRecordsLast10Years",
"PublicRecordsLast12Months",
"DebtToIncomeRatio","IncomeRange",
"IncomeVerifiable", "LoanOriginalAmount",
"LoanOriginationDate", "LoanOriginationQuarter",
"ListingCreationDate")]
#change some column names
#note - the relationship between CreditScoreLower and CreditScoreUpper is perfectly linear
ld <- plyr::rename(ld, c("ProsperRating..numeric." = "ProsperRating",
"ListingCategory..numeric." = "ListingCategory",
"CreditScoreRangeLower" = "CreditScore"))
#convert variables to appropriate data types
ld$Term <- as.ordered(ld$Term)
ld$ListingCategory <- factor(ld$ListingCategory)
#dates
ld$ListingCreationData <- base::as.Date(ld$ListingCreationDate, "%Y-%m-%d")
ld$LoanOriginationDate <- base::as.Date(ld$LoanOriginationDate, "%Y-%m-%d")
ld$FirstRecordedCreditLine <- base::as.Date(ld$FirstRecordedCreditLine,
"%Y-%m-%d")
ld$ListingCreationDate <- base::as.Date(ld$ListingCreationDate, "%Y-%m-%d")
ld$LoanMonth <- factor(format(ld$LoanOriginationDate, format = "%Y-%m"))
#combine IncomeRange $0 and "Not employed", convert "Not Displayed" to NA
ld$IncomeRange[ld$IncomeRange == "Not employed"] <- "$0"
ld$IncomeRange[ld$IncomeRange == "Not displayed"] <- NA
ld$IncomeRange <- factor(ld$IncomeRange, levels = c(NA, "$0", "$1-24,999",
"$25,000-49,999",
"$50,000-74,999",
"$75,000-99,999",
"$100,000+"))
#make ProsperRating an ordered factor
ld$ProsperRating <- ordered(ld$ProsperRating)
#a variable to indicate what month the loan was issued in
ld$Month <- factor(months(ld$LoanOriginationDate))
ld$Month <- factor(ld$Month, levels = c("January", "February", "March",
"April", "May", "June", "July",
"August", "September", "October",
"November", "December"))
#add prevailing interest rates obtained from the FederalReserve
TBRate <- read.csv("Fed3monthTbillRate.csv")
TBRate$Date <- as.Date(TBRate$Date,"%Y-%m-%d")
TBRate$LoanMonth <- format(TBRate$Date, format = "%Y-%m")
#merge the two data sets based on LoanMonth
ld <- merge(ld, TBRate)
#need to divide by 100 to match BorrowerRate
ld$TB3MS <- ld$TB3MS / 100
#so now I need to create a column in ld that uses the month from
#ld$LoanOrigination, compares it to the month for TBRate$Data and then puts
#the TBRate$TB3MS in it's place
CCRate <-read.csv("cc_rates.csv", header=FALSE)
names(CCRate) <- c("Date", "CCRate")
CCRate$CCRate <- CCRate$CCRate / 100
CCRate$Date <- as.Date(CCRate$Date, "%m/%d/%y")
CCRate$LoanMonth <- format(CCRate$Date, format = "%Y-%m")
ld <- merge(ld, CCRate)
ggplot(aes(x = LoanOriginationDate), data = ld) +
geom_histogram(binwidth = 30) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01")))
ld$LoanMonth <- (as.Date(paste(ld$LoanMonth, "-01",sep = ""), "%Y-%m-%d"))
monthly_average <- ld %>%
group_by(LoanMonth) %>%
summarise(Prosper = mean(BorrowerRate), CreditCard = mean(CCRate))
Rates <- monthly_average %>%
gather(Type, Loan, Prosper:CreditCard)
ggplot(aes(x = LoanMonth, y = Loan * 100, color = Type), data = Rates) +
geom_line() +
scale_colour_manual(values=c("blue2", "brown1"),
labels = c("Prosper", "Credit Cards")) +
geom_vline(data = d, mapping = aes(xintercept = as.numeric(date)),
color = vline_color, size = .2) +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
```
ggplot(aes(x = LoanMonth, y = Loan * 100, color = Type), data = Rates) +
geom_line() +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
ld$LoanMonth <- (as.Date(paste(ld$LoanMonth, "-01",sep = ""), "%Y-%m-%d"))
#create a dataframe with monthly mean BorrowerRate and CCRate
monthly_average <- ld %>%
group_by(LoanMonth) %>%
summarise(Prosper = mean(BorrowerRate), CreditCard = mean(CCRate))
#gather into 3 columns - LoanMonth, Rate, Type (cc or prosper)
Rates <- monthly_average %>%
gather(Type, Loan, Prosper:CreditCard)
ggplot(aes(x = LoanMonth, y = Loan * 100), data = subset(Rates, type="Prosper") +
geom_line() +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
ggplot(aes(x = LoanMonth, y = Loan * 100), data = subset(Rates, type="Prospe")) +
geom_line() +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
ld$LoanMonth <- (as.Date(paste(ld$LoanMonth, "-01",sep = ""), "%Y-%m-%d"))
#create a dataframe with monthly mean BorrowerRate and CCRate
monthly_average <- ld %>%
group_by(LoanMonth) %>%
summarise(Prosper = mean(BorrowerRate), CreditCard = mean(CCRate))
#gather into 3 columns - LoanMonth, Rate, Type (cc or prosper)
Rates <- monthly_average %>%
gather(Type, Loan, Prosper:CreditCard)
ggplot(aes(x = LoanMonth, y = Loan * 100), data = subset(Rates, type="Prosper")) +
geom_line() +
coord_cartesian(xlim = c(as.Date("2005/09/01"), as.Date("2014/05/01"))) +
theme_bw() +
ylab("Interest Rate (Monthly Average)") + xlab("Date") +
theme(axis.text.y = element_text(angle = 90),
legend.position = c(.85,.2))
#Best look at the major contributors to BorrowerRate using the ldNew data
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
#bin Income Range into 3 categories - low, middle, high
ldNewSample <- sample_frac(ldNew, .01)
#take a sample of the data? 10%
ggplot(aes(x = CreditScore, y = BorrowerRate * 100, color = Income2,
size = LoanOriginalAmount), data = ldNewSample) +
geom_point(position = "jitter", alpha = .8) +
theme_bw() + ylab("Interest Rate (%)") + xlab("Credit Score") +
scale_y_continuous(breaks = seq(10,35,5)) +
scale_color_discrete(name = "Income Group",
labels = c("Low", "Middle", "High")) +
scale_size_continuous(name = "Loan Amount") +
ggtitle("Snapshot of Prosper Loans")
#Best look at the major contributors to BorrowerRate using the ldNew data
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
#bin Income Range into 3 categories - low, middle, high
ldNewSample <- sample_frac(ldNew, .01)
#take a sample of the data? 10%
ggplot(aes(x = CreditScore, y = BorrowerRate * 100, color = Income2,
size = LoanOriginalAmount), data = ldNewSample) +
geom_point(position = "jitter", alpha = .8) +
theme_bw() + ylab("Interest Rate (%)") + xlab("Credit Score") +
scale_y_continuous(breaks = seq(10,35,5)) +
scale_color_discrete(name = "Income Group",
labels = c("Low", "Middle", "High")) +
scale_size_continuous(name = "Loan Amount") +
ggtitle("Snapshot of Prosper Loans")
source('~/.active-rstudio-document', echo=TRUE)
#Best look at the major contributors to BorrowerRate using the ldNew data
ldNew$Income2 <- factor(ntile(ldNew$IncomeRange, 3))
#bin Income Range into 3 categories - low, middle, high
ldNewSample <- sample_frac(ldNew, .01)
#take a sample of the data? 10%
ggplot(aes(x = CreditScore, y = BorrowerRate * 100, color = Income2,
size = LoanOriginalAmount), data = ldNewSample) +
geom_point(position = "jitter", alpha = .8) +
theme_bw() + ylab("Interest Rate (%)") + xlab("Credit Score") +
scale_y_continuous(breaks = seq(10,35,5)) +
scale_color_discrete(name = "Income Group",
labels = c("Low", "Middle", "High")) +
scale_size_continuous(name = "Loan Amount") +
ggtitle("Snapshot of Prosper Loans")
#barplot of loan counts by listing category, stacked by interest rate
#create bins for the interest rates
ldNew$RateBins <- cut(ldNew$BorrowerRate, breaks = c(0,.10, .15, .22,.29, .4),
labels = c("<10%", "10-15%", "15-22%", "20-29%", ">29%"))
ggplot(aes(x = CreditScore, color = RateBins), data = ldNew) +
geom_freqpoly(binwidth = 20) +
theme_bw() + xlab("Credit Score") + ylab("Frequency") +
scale_color_discrete(name = "Interest Rate") +
theme(legend.position = c(.8,.7)) +
ggtitle("Frequency of Interest Rates Based on Credit Score")
result <- as.character(round(cor(ldNew$CreditScore, sqrt(ldNew$BorrowerRate)), digits = 4))
#sqrt(BorrowerRate) vs. CreditScore
ggplot(aes(x = CreditScore, y = sqrt(BorrowerRate)), data = ldNew) +
geom_point(alpha = .02, position = "jitter") +
stat_smooth(method = "lm") +
annotate("text", x = 860, y = .6, label = paste("r = ", result))
result
result <- as.character(round(cor(ldNew$CreditScore, (ldNew$BorrowerRate)), digits = 4))
result
result <- as.character(round(cor(ldNew$CreditScore, (ldNew$BorrowerRate)), digits = 4))
#sqrt(BorrowerRate) vs. CreditScore
ggplot(aes(x = CreditScore, y = (BorrowerRate)), data = ldNew) +
geom_point(alpha = .02, position = "jitter") +
stat_smooth(method = "lm") +
annotate("text", x = 860, y = .6, label = paste("r = ", result))
result <- as.character(round(cor(ldNew$CreditScore, (ldNew$BorrowerRate)), digits = 4))
#sqrt(BorrowerRate) vs. CreditScore
ggplot(aes(x = CreditScore, y = BorrowerRate), data = ldNew) +
geom_point(alpha = .02, position = "jitter") +
stat_smooth(method = "lm") +
annotate("text", x = 860, y = .4, label = paste("r = ", result))
cor(sqrt(ldNew$EmploymentStatusDuration[!is.na(ldNew$EmploymentStatusDuration)]), ldNew$CreditScore[!is.na(ldNew$EmploymentStatusDuration)])
cor(sqrt(ldNew$EmploymentStatusDuration[!is.na(ldNew$EmploymentStatusDuration)]),
ldNew$CreditScore[!is.na(ldNew$EmploymentStatusDuration)])
cor
(sqrt(ldNew$EmploymentStatusDuration[!is.na(ldNew$EmploymentStatusDuration)]),
ldNew$CreditScore[!is.na(ldNew$EmploymentStatusDuration)])
cor(sqrt(ldNew$EmploymentStatusDuration[!is.na(ldNew$EmploymentStatusDuration)])
,ldNew$CreditScore[!is.na(ldNew$EmploymentStatusDuration)])
cor(sqrt(ldNew$EmploymentStatusDuration[!is.na(ldNew$EmploymentStatusDuration)])
,ldNew$CreditScore[!is.na(ldNew$EmploymentStatusDuration)])
ggplot(aes(x = BankcardUtilization), data = ldNew) +
geom_histogram(binwidth = .01) +
xlim(c(0,1.3))
ggplot(aes(x = BankcardUtilization, y = CreditScore),
data = sample_n(ldNew, 10000)) +
geom_point(position = "jitter", alpha = .1) +
xlim(c(0,1)) +
stat_smooth(method = "lm")
cor(ldNew$BankcardUtilization, ldNew$CreditScore)
ggplot(aes(x = sqrt(DebtToIncomeRatio), y = sqrt(BorrowerRate)),
data = sample_n(ldNew, 5000)) +
geom_point(alpha = .1) +
xlim(c(0,1.5)) +
stat_smooth(method = "lm")
cor(ldNew$BorrowerRate[!is.na(ldNew$DebtToIncomeRatio)],
ldNew$DebtToIncomeRatio[!is.na(ldNew$DebtToIncomeRatio)])
